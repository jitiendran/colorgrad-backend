type Query {
  getMyColors(data: getColorsInput!): [Colors_type]
  getColors: [Colors_type]
  getPopularColors: [Colors_type]
  getFavouriteColors: [Colors_type]
  get_followers(data: friendInput!): [friends]!
  get_following(data: friendInput!): [friends]!
  getMyGradients(data: getColorInput!): [Gradients_type]
  getGradients: [Gradients_type]
  getFavouriteGradients: [Gradients_type]
  user_login(data: user_loginInput!): token!
  get_user(data: get_userInput!): user_info!
  get_color(data: get_userInput!): [Colors_type]!
  get_gradient(data: get_userInput!): [Gradients_type]!
  get_allusers: [user_info!]!
  check_username(data: check_usernameInput!): Boolean
}

type Mutation {
  insertColors(data: insertColorsInput!): Boolean!
  copyColors(data: copyColorsInput!): Boolean!
  insertGradient(data: insertGradientInput!): Boolean!
  copyGradient(data: copyGradientInput!): Boolean!
  user_register(data: user_registerInput!): token!
  refresh_token(data: refresh_tokenInput!): token!
  user_logout: Boolean!
  add_friend(data: add_friendInput!): Boolean!
  remove_friend(data: remove_friendInput!): Boolean!
  add_favouriteColor(data: add_favouriteColorInput!): Boolean!
  add_favouriteGradient(data: add_favouriteGradientInput!): Boolean!
  remove_favouriteColor(data: remove_favouriteColorInput!): Boolean!
  remove_favouriteGradient(data: remove_favouriteGradientInput!): Boolean!
  update_user(data: update_UserInput!): Boolean!
  upload_profile(file: Upload): Boolean!
}

type Colors_type {
  _id: String
  Colors: String
  Type: String
  UsedBy: Int
  UserId: String
}

input insertColorsInput {
  UserId: String!
  Colors: String!
  Type: String!
}

input copyColorsInput {
  ColorId: String
  UserId: String
}

input getColorsInput {
  UserId: String!
}

input friendInput {
  Id: String!
}

type friends {
  _id: String!
  Username: String!
  Email: String!
  Profile: String
}

type Gradients_type {
  _id: String
  Colors: [String]
  Type: String
  Direction: String
  UsedBy: Int
  UserId: String
}

input insertGradientInput {
  UserId: String!
  Colors: [String]!
  Type: String!
  Direction: String!
}

input getColorInput {
  UserId: String!
}

input copyGradientInput {
  GradientId: String!
  UserId: String!
}

input user_loginInput {
  Username: String!
  Password: String!
}

input get_userInput {
  UserId: String!
}

input update_UserInput {
  LinkedinProfile: String!
  GithubProfile: String!
}

input user_registerInput {
  Username: String!
  Password: String!
  Email: String!
}

input add_friendInput {
  UserId: String!
}

input remove_friendInput {
  FriendId: String!
}

type added_friend {
  Added: Boolean!
}

type token {
  Token: String!
  RefreshToken: String!
}

input refresh_tokenInput {
  UserId: String!
  Username: String!
  RefreshToken: String!
}

input add_favouriteColorInput {
  ColorId: String!
  Colors: String!
  Type: String!
  UsedBy: Int!
}

input add_favouriteGradientInput {
  GradientId: String!
  Colors: [String]!
  Type: String!
  Direction: String!
  UsedBy: Int!
}

input remove_favouriteColorInput {
  ColorId: String!
}

input remove_favouriteGradientInput {
  GradientId: String!
}

input check_usernameInput {
  Username: String!
}

type user_info {
  _id: String
  Username: String
  Email: String
  Password: String
  LinkedinProfile: String
  GithubProfile: String
  Colors: [Colors_type]
  Gradients: [Gradients_type]
  Followers: [friends]
  Following: [friends]
  No_Of_Colors: Int
  No_Of_Gradients: Int
  Rating: Float!
  Profile: String
}

schema {
  query: Query
  mutation: Mutation
}
